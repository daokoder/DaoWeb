
load web.cgi
load web_user
load web_label


routine DeleteLabel( space : int, name : string )
{
	hd = web_database.Delete( Label ).Where().EQ( 'uid', space ).EQ( 'name' ).Bind( name );
	hd.QueryOnce();
}
routine CreateLabel( space : int, name : string )
{
	hd = web_database.Select( Label ).Where().EQ( 'uid', space ).EQ( 'name' ).Bind( name );
	label = Label::{ uid => space, name => name, color => '#0f0' };
	if( hd.QueryOnce( label ) ) return 0;
	web_database.Insert( label );
	return 1;
}

routine ChangeLabelColor( space : int, name : string, color : string )
{
	if( color[0:0] != '#' ) color = '#' + color;
	hd = web_database.Update( Label ).Set( 'color' ).Where()
		.EQ( 'uid', space ).EQ( 'name' ).Bind( color ).Bind( name, 1 );
	hd.QueryOnce();
}
routine ChangeLabelName( space : int, name : string, newname : string )
{
	hd = web_database.Update( Label ).Set( 'name' ).Where()
		.EQ( 'uid', space ).EQ( 'name' ).Bind( newname ).Bind( name, 1 );
	hd.QueryOnce();
}
routine ChangeLabelRow( space : int, name : string, row : int )
{
	hd = web_database.Update( Label ).Set( 'row',row ).Where()
		.EQ( 'uid', space ).EQ( 'name' ).Bind( name );
	hd.QueryOnce();
}
routine ChangeLabelSort( space : int, name : string, sort : int )
{
	hd = web_database.Update( Label ).Set( 'sort', sort ).Where()
		.EQ( 'uid', space ).EQ( 'name' ).Bind( name );
	hd.QueryOnce();
}


httpdata = HTTP_GET.has( 'space_id' ) ? HTTP_GET : HTTP_POST;


io.writeln( 'content-type: text/html\n' );


if( User::Current.uid ==0 ) return

space = (int) httpdata[ 'space_id' ];

if( httpdata.has( 'create' ) ){
	if( CreateLabel( space, httpdata[ 'create' ] ) ==0 ){
		io.writeln( 'label:', httpdata[ 'create' ], 'alread exists.' );
	}
}else if( httpdata.has( 'delete' ) ){
	DeleteLabel( space, httpdata[ 'delete' ] );
}else if( httpdata.has( 'label' ) && httpdata.has( 'color' ) ){
	ChangeLabelColor( space, httpdata['label'], httpdata[ 'color' ] );
}else if( httpdata.has( 'label' ) && httpdata.has( 'name' ) ){
	ChangeLabelName( space, httpdata['label'], httpdata[ 'name' ] );
}else if( httpdata.has( 'label' ) && httpdata.has( 'row' ) ){
	ChangeLabelRow( space, httpdata['label'], (int)httpdata[ 'row' ] );
}else if( httpdata.has( 'label' ) && httpdata.has( 'sort' ) ){
	ChangeLabelSort( space, httpdata['label'], (int)httpdata[ 'sort' ] );
}

editlabel = ViewLabels( GetLabels( space ) );

io.writeln( editlabel );

